import telebot
import random
from telebot import types

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = ''

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
all_users = []
players = {}
roles = {}
game_state = "waiting"  # waiting, night, day
host_id = None
victim_id = None
votes = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤
voted_players = []  # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–≤—à–∏—Ö –∏–≥—Ä–æ–∫–æ–≤

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤–µ–¥—É—â–µ–≥–æ
def create_host_keyboard():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton('üëÆüèª‚Äç‚ôÇÔ∏è –ù–∞—á–∞—Ç—å –∏–≥—Ä—ÉüëÆüèª‚Äç‚ôÇÔ∏è'))
    markup.add(types.KeyboardButton('‚òÄÔ∏è –î–µ–Ω—å'))
    markup.add(types.KeyboardButton('üåô –ù–æ—á—å'))
    markup.add(types.KeyboardButton('üÜï –ù–æ–≤–∞—è –∏–≥—Ä–∞üÜï'))
    markup.add(types.KeyboardButton('‚ùå –°–±—Ä–æ—Å–∏—Ç—å —Ä–æ–ª—å'))
    return markup

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤
def create_player_keyboard(is_host_assigned=False, is_player=False):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    if not is_host_assigned and not is_player:
        markup.add(types.KeyboardButton('ü´° –í–µ–¥—É—â–∏–π'))
    if not is_player:
        markup.add(types.KeyboardButton('üîπ –ò–≥—Ä–æ–∫üîπ'))
    if is_player or is_host_assigned:
        markup.add(types.KeyboardButton('‚ùå –°–±—Ä–æ—Å–∏—Ç—å —Ä–æ–ª—å'))
    return markup

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ä—Ç–∞
@bot.message_handler(commands=['start'])
def start(message):
    if host_id:
        bot.reply_to(message, '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ –º–∞—Ñ–∏—é. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∏–≥—Ä–æ–π.', reply_markup=create_player_keyboard(is_host_assigned=True))
    else:
        bot.reply_to(message, '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ –º–∞—Ñ–∏—é. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∏–≥—Ä–æ–π.', reply_markup=create_player_keyboard())

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–≥—Ä–æ–∫–æ–≤
@bot.message_handler(commands=['join'])
def join(message):
    player_name = message.from_user.first_name
    player_id = message.from_user.id
    if player_id == host_id:
        bot.reply_to(message, '–í–µ–¥—É—â–∏–π –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–≥—Ä–æ–∫–æ–º. –°–Ω–∞—á–∞–ª–∞ —Å–±—Ä–æ—Å—å—Ç–µ —Ä–æ–ª—å –≤–µ–¥—É—â–µ–≥–æ.', reply_markup=create_host_keyboard())
        return
    if player_id not in players:
        players[player_id] = player_name
        bot.reply_to(message, f'{player_name} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ!', reply_markup=create_player_keyboard(is_host_assigned=host_id is not None, is_player=True))
    else:
        bot.reply_to(message, f'{player_name}, –≤—ã —É–∂–µ –≤ –∏–≥—Ä–µ!', reply_markup=create_player_keyboard(is_host_assigned=host_id is not None, is_player=True))

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –≤–µ–¥—É—â–µ–≥–æ
@bot.message_handler(commands=['host'])
def set_host(message):
    global host_id
    player_id = message.from_user.id
    if host_id is not None:
        bot.reply_to(message, '–í–µ–¥—É—â–∏–π —É–∂–µ –Ω–∞–∑–Ω–∞—á–µ–Ω.', reply_markup=create_player_keyboard(is_host_assigned=True, is_player=player_id in players))
        return

    if player_id in players:
        bot.reply_to(message, '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å—Ç–∞—Ç—å –≤–µ–¥—É—â–∏–º, —Ç–∞–∫ –∫–∞–∫ –≤—ã —É–∂–µ –∏–≥—Ä–æ–∫. –°–Ω–∞—á–∞–ª–∞ —Å–±—Ä–æ—Å—å—Ç–µ —Ä–æ–ª—å –∏–≥—Ä–æ–∫–∞.', reply_markup=create_player_keyboard(is_host_assigned=True, is_player=True))
        return

    host_id = player_id
    bot.reply_to(message, f'{message.from_user.first_name} –Ω–∞–∑–Ω–∞—á–µ–Ω –≤–µ–¥—É—â–∏–º!', reply_markup=create_host_keyboard())

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
    for player_id in players:
        if player_id != host_id:
            bot.send_message(player_id, '–í–µ–¥—É—â–∏–π –Ω–∞–∑–Ω–∞—á–µ–Ω.', reply_markup=create_player_keyboard(is_host_assigned=True, is_player=True))

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ –≤–µ–¥—É—â–µ–≥–æ
@bot.message_handler(commands=['resign'])
def resign_host(message):
    global host_id
    if message.from_user.id != host_id:
        bot.reply_to(message, '–¢–æ–ª—å–∫–æ –≤–µ–¥—É—â–∏–π –º–æ–∂–µ—Ç —Å–±—Ä–æ—Å–∏—Ç—å —Å–≤–æ—é —Ä–æ–ª—å.', reply_markup=create_player_keyboard(is_host_assigned=True, is_player=message.from_user.id in players))
        return

    if game_state != "waiting":
        bot.reply_to(message, '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å —Å–≤–æ—é —Ä–æ–ª—å –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã.')
        return

    host_id = None
    bot.reply_to(message, '–í–µ–¥—É—â–∏–π —Å–±—Ä–æ—à–µ–Ω. –ù–æ–≤—ã–π –≤–µ–¥—É—â–∏–π –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω.', reply_markup=create_player_keyboard(is_player=message.from_user.id in players))

    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
    for player_id in players:
        bot.send_message(player_id, '–í–µ–¥—É—â–∏–π —Å–±—Ä–æ—à–µ–Ω. –ù–æ–≤—ã–π –≤–µ–¥—É—â–∏–π –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω.', reply_markup=create_player_keyboard(is_player=True))# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ä–æ–ª–∏ –∏–≥—Ä–æ–∫–∞

@bot.message_handler(commands=['reset_role'])
def reset_role(message):
    player_id = message.from_user.id
    if player_id in players:
        del players[player_id]
        if player_id in roles:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–ª—é—á –≤ —Å–ª–æ–≤–∞—Ä–µ roles
            del roles[player_id]  # –£–¥–∞–ª—è–µ–º —Ä–æ–ª—å –∏–≥—Ä–æ–∫–∞
        bot.reply_to(message, '–í–∞—à–∞ —Ä–æ–ª—å —Å–±—Ä–æ—à–µ–Ω–∞.', reply_markup=create_player_keyboard(is_host_assigned=host_id is not None))
    elif player_id == host_id:
        resign_host(message)
    else:
        bot.reply_to(message, '–í—ã –Ω–µ –≤ –∏–≥—Ä–µ.', reply_markup=create_player_keyboard(is_host_assigned=host_id is not None))

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
@bot.message_handler(commands=['begin'])
def begin_game(message):
    global game_state
    if message.from_user.id != host_id:
        bot.reply_to(message, '–¢–æ–ª—å–∫–æ –≤–µ–¥—É—â–∏–π –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É.', reply_markup=create_player_keyboard(is_host_assigned=True, is_player=message.from_user.id in players))
        return

    if len(players) < 2:
        bot.reply_to(message, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã.', reply_markup=create_host_keyboard())
        return

    # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π
    roles.clear()
    num_mafia = len(players) // 2
    player_roles = ['–º–∞—Ñ–∏—è'] * num_mafia + ['–º–∏—Ä–Ω—ã–π'] * (len(players) - num_mafia)
    random.shuffle(player_roles)

    # –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π –∏–≥—Ä–æ–∫–∞–º
    for player_id, role in zip(players.keys(), player_roles):
        roles[player_id] = role
        if player_id == host_id:
            bot.send_message(player_id, f'–í–∞—à–∞ —Ä–æ–ª—å: {role}', reply_markup=create_host_keyboard())
        else:
            bot.send_message(player_id, f'–í–∞—à–∞ —Ä–æ–ª—å: {role}', reply_markup=create_player_keyboard(is_host_assigned=True, is_player=True))

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ—Ö —Ä–æ–ª–µ–π –≤–µ–¥—É—â–µ–º—É
    roles_message = "\n".join([f'{players[player_id]}: {role}' for player_id, role in roles.items()])
    bot.send_message(host_id, f'–†–æ–ª–∏ –∏–≥—Ä–æ–∫–æ–≤:\n{roles_message}', reply_markup=create_host_keyboard())
    bot.send_message(host_id, '–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –ù–∞—Å—Ç—É–ø–∏–ª–∞ –Ω–æ—á—å. –ú–∞—Ñ–∏—è, –ø—Ä–æ—Å—ã–ø–∞–π—Ç–µ—Å—å!', reply_markup=create_host_keyboard())

    game_state = "night"
    for player_id in players:
        bot.send_message(player_id, '–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –ù–∞—Å—Ç—É–ø–∏–ª–∞ –Ω–æ—á—å. –ú–∞—Ñ–∏—è, –ø—Ä–æ—Å—ã–ø–∞–π—Ç–µ—Å—å!', reply_markup=create_host_keyboard() if player_id == host_id else create_player_keyboard(is_host_assigned=True, is_player=True))

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –∂–∏–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ –º–∞—Ñ–∏–∏
    mafia_ids = [player_id for player_id, role in roles.items() if role == '–º–∞—Ñ–∏—è']
    living_players = [players[player_id] for player_id in players.keys()]
    living_players_message = "\n".join([f'{i+1}. {name}' for i, name in enumerate(living_players)])
    for mafia_id in mafia_ids:
        bot.send_message(mafia_id, f'–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ—Ä—Ç–≤—É:\n{living_players_message}', reply_markup=create_player_keyboard(is_host_assigned=True, is_player=True))

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–æ—á—å—é
@bot.message_handler(commands=['night'])
def night(message):
    global game_state, victim_id
    if message.from_user.id != host_id:
        bot.reply_to(message, '–¢–æ–ª—å–∫–æ –≤–µ–¥—É—â–∏–π –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –Ω–æ—á—å—é.', reply_markup=create_player_keyboard(is_host_assigned=True, is_player=message.from_user.id in players))
        return

    if game_state != "day":
        bot.reply_to(message, '–°–µ–π—á–∞—Å –Ω–µ –¥–µ–Ω—å.', reply_markup=create_host_keyboard())
        return

    game_state = "night"
    for player_id in players:
        bot.send_message(player_id, '–ù–∞—Å—Ç—É–ø–∏–ª–∞ –Ω–æ—á—å. –ú–∞—Ñ–∏—è, –ø—Ä–æ—Å—ã–ø–∞–π—Ç–µ—Å—å!', reply_markup=create_host_keyboard() if player_id == host_id else create_player_keyboard(is_host_assigned=True, is_player=True))
    bot.send_message(host_id, '–ù–∞—Å—Ç—É–ø–∏–ª–∞ –Ω–æ—á—å. –ú–∞—Ñ–∏—è, –ø—Ä–æ—Å—ã–ø–∞–π—Ç–µ—Å—å!', reply_markup=create_host_keyboard())

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –∂–∏–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ –º–∞—Ñ–∏–∏
    mafia_ids = [player_id for player_id, role in roles.items() if role == '–º–∞—Ñ–∏—è']
    living_players = [players[player_id] for player_id in players.keys()]
    living_players_message = "\n".join([f'{i+1}. {name}' for i, name in enumerate(living_players)])
    for mafia_id in mafia_ids:
        bot.send_message(mafia_id, f'–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ—Ä—Ç–≤—É:\n{living_players_message}', reply_markup=create_player_keyboard(is_host_assigned=True, is_player=True))

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–Ω–µ–º
@bot.message_handler(commands=['day'])
def day(message):
    global game_state, victim_id, votes
    if message.from_user.id != host_id:
        bot.reply_to(message, '–¢–æ–ª—å–∫–æ –≤–µ–¥—É—â–∏–π –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –¥–Ω–µ–º.', reply_markup=create_player_keyboard(is_host_assigned=True, is_player=message.from_user.id in players))
        return
    if game_state != "night":
        bot.reply_to(message, '–°–µ–π—á–∞—Å –Ω–µ –Ω–æ—á—å.', reply_markup=create_host_keyboard())
        return

    game_state = "day"
    if victim_id:
        victim_name = players[victim_id]
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É–±–∏—Ç–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –æ –µ–≥–æ —Å–º–µ—Ä—Ç–∏
        bot.send_message(victim_id, f'–í—ã –±—ã–ª–∏ —É–±–∏—Ç—ã –º–∞—Ñ–∏–µ–π. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –±–æ–ª—å—à–µ –∏–≥—Ä–∞—Ç—å –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –∏–≥—Ä—ã.')
        del players[victim_id]  # –£–¥–∞–ª—è–µ–º —É–±–∏—Ç–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤
        del roles[victim_id]  # –£–¥–∞–ª—è–µ–º —Ä–æ–ª—å —É–±–∏—Ç–æ–≥–æ –∏–≥—Ä–æ–∫–∞
        for player_id in players:
            bot.send_message(player_id, f'–ù–∞—Å—Ç—É–ø–∏–ª –¥–µ–Ω—å. –í—Å–µ –ø—Ä–æ—Å—ã–ø–∞—é—Ç—Å—è! {victim_name} –±—ã–ª —É–±–∏—Ç –º–∞—Ñ–∏–µ–π.', reply_markup=create_host_keyboard() if player_id == host_id else create_player_keyboard(is_host_assigned=True, is_player=True))
        bot.send_message(host_id, f'–ù–∞—Å—Ç—É–ø–∏–ª –¥–µ–Ω—å. –í—Å–µ –ø—Ä–æ—Å—ã–ø–∞—é—Ç—Å—è! {victim_name} –±—ã–ª —É–±–∏—Ç –º–∞—Ñ–∏–µ–π.', reply_markup=create_host_keyboard())
        victim_id = None
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–±–µ–¥—É
        if all(role == '–º–∞—Ñ–∏—è' for role in roles.values()):
            bot.send_message(host_id, '–í—Å–µ –º–∏—Ä–Ω—ã–µ –∂–∏—Ç–µ–ª–∏ —É–±–∏—Ç—ã. –ú–∞—Ñ–∏—è –ø–æ–±–µ–∂–¥–∞–µ—Ç!')
            for player_id in players:
                bot.send_message(player_id, '–í—Å–µ –º–∏—Ä–Ω—ã–µ –∂–∏—Ç–µ–ª–∏ —É–±–∏—Ç—ã. –ú–∞—Ñ–∏—è –ø–æ–±–µ–∂–¥–∞–µ—Ç!')
            game_state = "waiting"
            return
        elif '–º–∞—Ñ–∏—è' not in roles.values():
            bot.send_message(host_id, '–í—Å–µ –º–∞—Ñ–∏–æ–∑–∏ –∏—Å–∫–ª—é—á–µ–Ω—ã. –ú–∏—Ä–Ω—ã–µ –∂–∏—Ç–µ–ª–∏ –ø–æ–±–µ–∂–¥–∞—é—Ç!')
            for player_id in players:
                bot.send_message(player_id, '–í—Å–µ –º–∞—Ñ–∏–æ–∑–∏ –∏—Å–∫–ª—é—á–µ–Ω—ã. –ú–∏—Ä–Ω—ã–µ –∂–∏—Ç–µ–ª–∏ –ø–æ–±–µ–∂–¥–∞—é—Ç!')
            game_state = "waiting"
            return
    else:
        for player_id in players:
            bot.send_message(player_id, '–ù–∞—Å—Ç—É–ø–∏–ª –¥–µ–Ω—å. –í—Å–µ –ø—Ä–æ—Å—ã–ø–∞—é—Ç—Å—è! –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ.', reply_markup=create_host_keyboard() if player_id == host_id else create_player_keyboard(is_host_assigned=True, is_player=True))
        bot.send_message(host_id, '–ù–∞—Å—Ç—É–ø–∏–ª –¥–µ–Ω—å. –í—Å–µ –ø—Ä–æ—Å—ã–ø–∞—é—Ç—Å—è! –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ.', reply_markup=create_host_keyboard())

    # –ù–∞—á–∞–ª–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    votes = {player_id: 0 for player_id in players}  # –°–±—Ä–æ—Å –≥–æ–ª–æ—Å–æ–≤
    voted_players.clear()  # –°–±—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–≤—à–∏—Ö
    living_players_message = "\n".join([f'{i+1}. {players[player_id]}' for i, player_id in enumerate(players.keys())])

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–∞—á–∞–ª–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –≤—Å–µ–º –∂–∏–≤—ã–º –∏–≥—Ä–æ–∫–∞–º
    for player_id in players:
        bot.send_message(player_id, f'–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –Ω–∞—á–∞–ª–æ—Å—å! –í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞, –∑–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å:\n{living_players_message}')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
@bot.message_handler(func=lambda message: game_state == "day" and message.from_user.id in players)
def vote(message):
    global votes, voted_players
    player_id = message.from_user.id
    if player_id in voted_players:
        bot.reply_to(message, '–í—ã —É–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏.')
        return

    try:
        vote_index = int(message.text) - 1
        if 0 <= vote_index < len(players):
            voted_player_id = list(players.keys())[vote_index]
            votes[voted_player_id] += 1
            voted_players.append(player_id)  # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞ –≤ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–≤—à–∏—Ö
            bot.reply_to(message, f'–í—ã –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –∑–∞ {players[voted_player_id]}.')

            # –ü—Ä–æ–≤–µ—Ä–∫–∞, –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –ª–∏ –≤—Å–µ
            if len(voted_players) == len(players):
                # –ü–æ–¥—Å—á–µ—Ç –≥–æ–ª–æ—Å–æ–≤
                max_votes = max(votes.values())
                victims = [player for player, count in votes.items() if count == max_votes]
                if len(victims) == 1:
                    victim_id = victims[0]
                    victim_name = players[victim_id]  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –∂–µ—Ä—Ç–≤—ã
                    bot.send_message(victim_id, '–í—ã –±—ã–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω—ã –∏–∑ –∏–≥—Ä—ã.')
                    del players[victim_id]  # –£–¥–∞–ª—è–µ–º –∏–≥—Ä–æ–∫–∞ –∏–∑ –∏–≥—Ä—ã
                    del roles[victim_id]  # –£–¥–∞–ª—è–µ–º —Ä–æ–ª—å –∏–≥—Ä–æ–∫–∞
                    bot.send_message(host_id, f'{victim_name} –±—ã–ª –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –∏–≥—Ä—ã.')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –∏–º—è

                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–±–µ–¥—É
                    if all(role == '–º–∞—Ñ–∏—è' for role in roles.values()):
                        bot.send_message(host_id, '–í—Å–µ –º–∏—Ä–Ω—ã–µ –∂–∏—Ç–µ–ª–∏ —É–±–∏—Ç—ã. –ú–∞—Ñ–∏—è –ø–æ–±–µ–∂–¥–∞–µ—Ç!')
                        for player_id in players:
                            bot.send_message(player_id, '–í—Å–µ –º–∏—Ä–Ω—ã–µ –∂–∏—Ç–µ–ª–∏ —É–±–∏—Ç—ã. –ú–∞—Ñ–∏—è –ø–æ–±–µ–∂–¥–∞–µ—Ç!')
                        game_state = "waiting"
                    elif '–º–∞—Ñ–∏—è' not in roles.values():
                        bot.send_message(host_id, '–í—Å–µ –º–∞—Ñ–∏–æ–∑–∏ –∏—Å–∫–ª—é—á–µ–Ω—ã. –ú–∏—Ä–Ω—ã–µ –∂–∏—Ç–µ–ª–∏ –ø–æ–±–µ–∂–¥–∞—é—Ç!')
                        for player_id in players:
                            bot.send_message(player_id, '–í—Å–µ –º–∞—Ñ–∏–æ–∑–∏ –∏—Å–∫–ª—é—á–µ–Ω—ã. –ú–∏—Ä–Ω—ã–µ –∂–∏—Ç–µ–ª–∏ –ø–æ–±–µ–∂–¥–∞—é—Ç!')
                        game_state = "waiting"
                else:
                    bot.send_message(host_id, '–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∂–µ—Ä—Ç–≤—É.')
                # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É
                game_state = "night"
                for player_id in players:
                    bot.send_message(player_id, '–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.', reply_markup=create_host_keyboard() if player_id == host_id else create_player_keyboard(is_host_assigned=True, is_player=True))
        else:
            bot.reply_to(message, '–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.')
    except ValueError:
        bot.reply_to(message, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏–≥—Ä–æ–∫–∞, –∑–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å.')

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã
@bot.message_handler(commands=['newgame'])
def new_game(message):
    global players, roles, game_state, victim_id, votes, voted_players, host_id
    if message.from_user.id != host_id:
        bot.reply_to(message, '–¢–æ–ª—å–∫–æ –≤–µ–¥—É—â–∏–π –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É.', reply_markup=create_player_keyboard(is_host_assigned=True, is_player=message.from_user.id in players))
        return

    # –°–±—Ä–æ—Å –≤—Å–µ—Ö –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    players.clear()
    roles.clear()
    game_state = "waiting"
    victim_id = None
    votes.clear()
    voted_players.clear()
    host_id = None  # –°–±—Ä–æ—Å –≤–µ–¥—É—â–µ–≥–æ

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –Ω–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    for user_id in all_users:
        bot.send_message(user_id, '–ù–æ–≤–∞—è –∏–≥—Ä–∞ –Ω–∞—á–∞—Ç–∞! –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é —Ä–æ–ª—å.', reply_markup=create_player_keyboard())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_text(message):
    global victim_id
    player_id = message.from_user.id

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç
    if player_id not in all_users:
        all_users.append(player_id)

    if game_state == "night" and player_id in players:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–æ–ª–∏ –±—ã–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã
        if player_id in roles:
            if roles[player_id] == '–º–∞—Ñ–∏—è':
                try:
                    victim_index = int(message.text) - 1
                    if 0 <= victim_index < len(players):
                        victim_id = list(players.keys())[victim_index]
                        if victim_id == player_id:
                            bot.reply_to(message, '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–±–∏—Ç—å —Å–µ–±—è. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –∂–µ—Ä—Ç–≤—É.', reply_markup=create_player_keyboard(is_host_assigned=True, is_player=True))
                        else:
                            bot.reply_to(message, f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –∂–µ—Ä—Ç–≤—É: {players[victim_id]}', reply_markup=create_player_keyboard(is_host_assigned=True, is_player=True))
                            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤–µ–¥—É—â–µ–º—É –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∂–µ—Ä—Ç–≤–µ
                            bot.send_message(host_id, f'–ú–∞—Ñ–∏—è –≤—ã–±—Ä–∞–ª–∞ –∂–µ—Ä—Ç–≤—É: {players[victim_id]}')
                    else:
                        bot.reply_to(message, '–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.', reply_markup=create_player_keyboard(is_host_assigned=True, is_player=True))
                except ValueError:
                    bot.reply_to(message, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∂–µ—Ä—Ç–≤—ã.', reply_markup=create_player_keyboard(is_host_assigned=True, is_player=True))
        else:
            bot.reply_to(message, '–†–æ–ª–∏ –µ—â–µ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.', reply_markup=create_player_keyboard(is_host_assigned=True, is_player=True))
    elif message.text == 'üîπ –ò–≥—Ä–æ–∫üîπ':
        join(message)
    elif message.text == 'ü´° –í–µ–¥—É—â–∏–π':
        set_host(message)
    elif message.text == 'üëÆüèª‚Äç‚ôÇÔ∏è –ù–∞—á–∞—Ç—å –∏–≥—Ä—ÉüëÆüèª‚Äç‚ôÇÔ∏è':
        begin_game(message)
    elif message.text == 'üåô –ù–æ—á—å':
        night(message)
    elif message.text == '‚òÄÔ∏è –î–µ–Ω—å':
        day(message)
    elif message.text == 'üÜï –ù–æ–≤–∞—è –∏–≥—Ä–∞üÜï':
        new_game(message)
    elif message.text == '‚ùå –°–±—Ä–æ—Å–∏—Ç—å —Ä–æ–ª—å':
        reset_role(message)
    else:
        if message.from_user.id == host_id:
            bot.reply_to(message, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–π.', reply_markup=create_host_keyboard())
        else:
            bot.reply_to(message, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–π.', reply_markup=create_player_keyboard(is_host_assigned=host_id is not None, is_player=message.from_user.id in players))

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    bot.polling()

if __name__ == '__main__':
    main()
