# cd/d C:\Users\'–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'\AppData\Local\Programs\Python\'–≤–µ—Ä—Å–∏—è –ø–∏—Ç–æ–Ω–∞'\Scripts
# pip install pyTelegramBotAPI
    

import telebot
import random
from telebot import types

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = ''

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
players = {}
roles = []
game_state = "waiting"  # waiting, night, day
host_id = None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤–µ–¥—É—â–µ–≥–æ
def create_host_keyboard():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton('üîπ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—èüîπ'))
    markup.add(types.KeyboardButton('ü´° –í–µ–¥—É—â–∏–πü´°'))
    markup.add(types.KeyboardButton('üëÆüèª‚Äç‚ôÇÔ∏è –ù–∞—á–∞—Ç—å –∏–≥—Ä—ÉüëÆüèª‚Äç‚ôÇÔ∏è'))
    markup.add(types.KeyboardButton('üåô –ù–æ—á—åüåô'))
    markup.add(types.KeyboardButton('‚òÄÔ∏è –î–µ–Ω—å‚òÄÔ∏è'))
    return markup

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤
def create_player_keyboard():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton('üîπ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—èüîπ'))
    markup.add(types.KeyboardButton('ü´° –í–µ–¥—É—â–∏–πü´°'))
    return markup

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
@bot.message_handler(commands=['start'])
def start(message):
    if message.from_user.id == host_id:
        bot.reply_to(message, '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ –º–∞—Ñ–∏—é. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /join –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –∏–≥—Ä–µ.', reply_markup=create_host_keyboard())
    else:
        bot.reply_to(message, '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ –º–∞—Ñ–∏—é. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /join –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –∏–≥—Ä–µ.', reply_markup=create_player_keyboard())

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–≥—Ä–æ–∫–æ–≤
@bot.message_handler(commands=['join'])
def join(message):
    player_name = message.from_user.username
    player_id = message.from_user.id
    if player_id not in players:
        players[player_id] = player_name
        if player_id == host_id:
            bot.reply_to(message, f'{player_name} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ!', reply_markup=create_host_keyboard())
        else:
            bot.reply_to(message, f'{player_name} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ!', reply_markup=create_player_keyboard())
    else:
        if player_id == host_id:
            bot.reply_to(message, f'{player_name}, –≤—ã —É–∂–µ –≤ –∏–≥—Ä–µ!', reply_markup=create_host_keyboard())
        else:
            bot.reply_to(message, f'{player_name}, –≤—ã —É–∂–µ –≤ –∏–≥—Ä–µ!', reply_markup=create_player_keyboard())

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –≤–µ–¥—É—â–µ–≥–æ
@bot.message_handler(commands=['host'])
def set_host(message):
    global host_id
    host_id = message.from_user.id
    bot.reply_to(message, f'{message.from_user.username} –Ω–∞–∑–Ω–∞—á–µ–Ω –≤–µ–¥—É—â–∏–º!', reply_markup=create_host_keyboard())

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
@bot.message_handler(commands=['begin'])
def begin_game(message):
    global game_state
    if message.from_user.id != host_id:
        bot.reply_to(message, '–¢–æ–ª—å–∫–æ –≤–µ–¥—É—â–∏–π –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É.', reply_markup=create_player_keyboard())
        return

    if len(players) < 2:
        bot.reply_to(message, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã.', reply_markup=create_host_keyboard())
        return

    # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π
    roles.clear()
    num_mafia = len(players) // 2
    roles.extend(['–º–∞—Ñ–∏—è'] * num_mafia + ['–º–∏—Ä–Ω—ã–π'] * (len(players) - num_mafia))
    random.shuffle(roles)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–æ–ª–µ–π –∏–≥—Ä–æ–∫–∞–º
    for player_id, role in zip(players.keys(), roles):
        if player_id == host_id:
            bot.send_message(player_id, f'–í–∞—à–∞ —Ä–æ–ª—å: {role}', reply_markup=create_host_keyboard())
        else:
            bot.send_message(player_id, f'–í–∞—à–∞ —Ä–æ–ª—å: {role}', reply_markup=create_player_keyboard())

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ—Ö —Ä–æ–ª–µ–π –≤–µ–¥—É—â–µ–º—É
    roles_message = "\n".join([f'{players[player_id]}: {role}' for player_id, role in zip(players.keys(), roles)])
    bot.send_message(host_id, f'–†–æ–ª–∏ –∏–≥—Ä–æ–∫–æ–≤:\n{roles_message}', reply_markup=create_host_keyboard())

    game_state = "night"
    bot.send_message(message.chat.id, '–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –ù–∞—Å—Ç—É–ø–∏–ª–∞ –Ω–æ—á—å. –ú–∞—Ñ–∏—è, –ø—Ä–æ—Å—ã–ø–∞–π—Ç–µ—Å—å!', reply_markup=create_host_keyboard())

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–æ—á—å—é
@bot.message_handler(commands=['night'])
def night(message):
    global game_state
    if message.from_user.id != host_id:
        bot.reply_to(message, '–¢–æ–ª—å–∫–æ –≤–µ–¥—É—â–∏–π –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –Ω–æ—á—å—é.', reply_markup=create_player_keyboard())
        return

    if game_state != "night":
        bot.reply_to(message, '–°–µ–π—á–∞—Å –Ω–µ –Ω–æ—á—å.', reply_markup=create_host_keyboard())
        return

    # –õ–æ–≥–∏–∫–∞ –¥–ª—è –Ω–æ—á–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —É–±–∏–π—Å—Ç–≤–æ)
    # ...

    game_state = "day"
    bot.send_message(message.chat.id, '–ù–∞—Å—Ç—É–ø–∏–ª –¥–µ–Ω—å. –í—Å–µ –ø—Ä–æ—Å—ã–ø–∞—é—Ç—Å—è!', reply_markup=create_host_keyboard())

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–Ω–µ–º
@bot.message_handler(commands=['day'])
def day(message):
    global game_state
    if message.from_user.id != host_id:
        bot.reply_to(message, '–¢–æ–ª—å–∫–æ –≤–µ–¥—É—â–∏–π –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –¥–Ω–µ–º.', reply_markup=create_player_keyboard())
        return

    if game_state != "day":
        bot.reply_to(message, '–°–µ–π—á–∞—Å –Ω–µ –¥–µ–Ω—å.', reply_markup=create_host_keyboard())
        return

    # –õ–æ–≥–∏–∫–∞ –¥–ª—è –¥–Ω—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ)
    # ...

    game_state = "night"
    bot.send_message(message.chat.id, '–ù–∞—Å—Ç—É–ø–∏–ª–∞ –Ω–æ—á—å. –ú–∞—Ñ–∏—è, –ø—Ä–æ—Å—ã–ø–∞–π—Ç–µ—Å—å!', reply_markup=create_host_keyboard())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_text(message):
    if message.text == 'üîπ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—èüîπ':
        join(message)
    elif message.text == 'ü´° –í–µ–¥—É—â–∏–πü´°':
        set_host(message)
    elif message.text == 'üëÆüèª‚Äç‚ôÇÔ∏è –ù–∞—á–∞—Ç—å –∏–≥—Ä—ÉüëÆüèª‚Äç‚ôÇÔ∏è':
        begin_game(message)
    elif message.text == 'üåô –ù–æ—á—åüåô':
        night(message)
    elif message.text == '‚òÄÔ∏è –î–µ–Ω—å‚òÄÔ∏è':
        day(message)
    else:
        if message.from_user.id == host_id:
            bot.reply_to(message, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–π.', reply_markup=create_host_keyboard())
        else:
            bot.reply_to(message, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–π.', reply_markup=create_player_keyboard())

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    bot.polling()

if __name__ == '__main__':
    main()

